@model PagedList.IPagedList<ExpatManager.Models.CeilingTable>
@{
    ViewBag.Title = "Ceiling Table Index";
}
<h2>
    Ceiling Table Index</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("Search", ViewBag.CurrentFilter as string)
        &nbsp;
        <input type="submit" value="Search" /></p>
}
<table>
    <tr>
        <th>
        </th>
        <th>
            @Html.ActionLink("Job Grade", "Index", new { sortOrder = ViewBag.SortParm2, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Family Status", "Index", new { sortOrder = ViewBag.SortParm3, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Ceiling Value", "Index", new { sortOrder = ViewBag.SortParm4, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CeilingTableID }) |
                @Html.ActionLink("Details", "Details", new { id = item.CeilingTableID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.CeilingTableID })
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobGrade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FamilyStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CeilingValue)
            </td>
        </tr>
    }
</table>
<div>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    of @Model.PageCount
    &nbsp;
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { pageNo = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw("&nbsp;");
        @Html.ActionLink("< Prev", "Index", new { pageNo = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:<<
        @Html.Raw("&nbsp;");
        @:< Prev
                }
    &nbsp;
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { pageNo = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
        @Html.Raw("&nbsp;");
        @Html.ActionLink(">>", "Index", new { pageNo = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
    }
    else
    {
        @:Next >
        @Html.Raw("&nbsp;")
        @:>>
                }
</div>
